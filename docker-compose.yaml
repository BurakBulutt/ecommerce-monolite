version: '3.8'

services:
  mongo:
    image: mongo
    container_name: ecommerce-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
      MONGO_INITDB_DATABASE: entity_log
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      replicas: 2

  postgres:
    image: postgres
    container_name: ecommerce-db
    restart: always
    environment:
      POSTGRES_DB: db_ecommerce_monolite
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    ports:
      - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      replicas: 2

  redis:
    image: redis
    container_name: ecommerce-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      replicas: 2

  ecommerce:
    image: ecommerce:dev
    container_name: ecommerce-project
    restart: always
    env_file:
      - secret.env
    networks:
      - ecommerce-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8080/actuator/health"]
      start_period: 30s
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      replicas: 2

networks:
  ecommerce-network:
    driver: bridge
volumes:
  db_data:
  mongo_data:


